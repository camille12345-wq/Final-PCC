import streamlit as st
import pandas as pd
import plotly.express as px

# Generamos 5 p치ginas en la aplicaci칩n web de Streamlit.
# Generamos una p치gina principal

# Creamos la lista de p치ginas
paginas = ['Inicio', 'Denuncias', 'Nubes de palabra', 'Gr치ficos interactivos', 'Mapa interactivo']

# Creamos botones de navegaci칩n tomando la lista de p치ginas
pagina_seleccionada = st.sidebar.selectbox('Selecciona una p치gina', paginas)

# Generamos condicionales para mostrar el contenido de cada p치gina
if pagina_seleccionada == "Inicio":
    # Fondo superior
    st.markdown(
        f"""
        <style>
        .stApp {{
            background-image: url("https://radiouno.pe/wp-content/uploads/2024/06/standard_standard_FACHADA_DEL_MINISTERIO__2__2_.jpg");
            background-size: cover;
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-position: center;
        }}
        .titulo {{
            background-color: rgba(255, 255, 255, 0.85);
            padding: 2rem;
            border-radius: 15px;
            margin-top: 3rem;
        }}
        </style>
        """,
        unsafe_allow_html=True
    )
    #T칤tulo personalizado
    st.markdown(
    "<h1 style='padding: 15px; border-radius: 10px; text-align: center;'>"
    "<span style='color: #660000;'>Portal</span> "
    "<span style='color: black;'>de</span> "
    "<span style='color: #660000;'>Transparencia</span> "
    "<span style='color: black;'>Electoral</span> "
    "<span style='color: #660000;'>2026</span>"
    "</h1>",
    unsafe_allow_html=True
)
     # Estructura en columnas para centrar el contenido
    col1, col2, col3 = st.columns([1, 2, 1])

    with col2:
        # Texto de bienvenida centrado
        st.markdown("""
        <div style='background-color: white; padding: 20px; border-radius: 10px; color: black; text-align: center;'>
            <p style='font-size: 18px;'>
                Bienvenido al <strong>Portal de Transparencia</strong>, una herramienta ciudadana para conocer la trayectoria de los candidatos presidenciales del 2026 en Per칰.<br><br>
                Podr치s revisar denuncias, ocupaci칩n, ingresos, experiencia pol칤tica y m치s.
            </p>
        </div>
        """, unsafe_allow_html=True)

        # Bot칩n centrado dentro de la columna
        st.write('---')
        st.markdown("<div style='text-align: center;'>", unsafe_allow_html=True)
    if st.button("游댌 Ver candidatos"):
        st.markdown("<p style='background-color: white; text-align: center; color: black;'>Haz clic en 'Denuncias' en el men칰 lateral izquierdo para ver la informaci칩n de los candidatos.</p>", unsafe_allow_html=True)
    st.markdown("</div>", unsafe_allow_html=True)
#Apartado de denuncias
elif pagina_seleccionada == 'Denuncias':

    # Cargar el archivo Excel
    df = pd.read_excel('excel_base_de_datos.xlsx')

    # Men칰 desplegable con los nombres
    politico = st.selectbox('Selecciona una figura pol칤tica', df['Nombre'].unique())

    # Filtrar datos del pol칤tico seleccionado
    datos = df[df['Nombre'] == politico].iloc[0]

    # Dividir en dos columnas: foto a la izquierda, datos a la derecha
    col1, col2 = st.columns([1, 2])

    with col1:
        st.image(datos['url_foto'], width=200)

    with col2:
        st.write(f"## {datos['Nombre']}")
        st.write(f"**DNI:** {datos['DNI']}")
        st.write(f"**Partido:** {datos['Partido']}")
        st.write(f"**Lugar de nacimiento:** {datos['Lugar de nacimiento']}")

    # Crear un DataFrame con los datos de denuncias
    denuncias_data = pd.DataFrame({
        'C칩digo': [datos['C칩digo']],
        'Nombre': [datos['Nombre']],
        'N칰mero de denuncias': [datos['# de denuncias encontrado']],
        'Tipo de denuncia m치s frecuente': [datos['Tipo de denuncia m치s frecuente ']],
        'URL de la denuncia': [datos['URL tipo noticia m치s frecuente']]
    })

    # Mostrar la tabla
    st.write('---')
    st.write("### Informaci칩n sobre denuncias")
    st.dataframe(denuncias_data)

    # Nota aclaratoria
    st.write("*Para ver la denuncia, copie y pegue el enlace en su navegador.*")
    
elif  pagina_seleccionada == 'Gr치ficos interactivos':

    # Agregamos un t칤tulo
    st.markdown("<h1 style='text-align: center;'>Gr치ficos interactivos y comparaci칩n de variables en figuras pol칤ticas</h1>", unsafe_allow_html=True)
    
    # Creamos una lista de gr치ficos
    graficos = ['Nube de palabras Ocupaciones Laborales','Nube de palabras Cargos p칰blicos anteriores', 'Gr치fico de pastel de Nivel de estudios', 'Gr치fico de pastel de Conocimiento de Lenguas originarias', 'Gr치fico de dispersi칩n de Ingresos anuales y Nivel de estudios', 'Gr치fico de barras de Cargos p칰blicos previos', 'Gr치fico de barras de Inmuebles y Muebles', 'Treemap comparativo Ocupaci칩n e Ingresos']

    # Creamos un cuadro de selecci칩n en la p치gina de gr치ficos
    grafico_seleccionado = st.selectbox('Selecciona un gr치fico', graficos)

    st.write('---')
    
    # Mostramos el gr치fico seleccionado
    if grafico_seleccionado == 'Nube de palabras Ocupaciones Laborales':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de datos textual a partir de la variable Ocupaci칩n laboral.</div>", unsafe_allow_html=True)
        st.image("nube_ocupaciones.png", caption='Nube de palabras Ocupaciones Laborales', width=600)
        pass
    elif grafico_seleccionado == 'Nube de palabras Cargos p칰blicos anteriores':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de datos textual a partir de la variable Cargo P칰blico previo.</div>", unsafe_allow_html=True)
        st.image("nube_cargos_anteriores.png", caption='Nube de palabras Cargos p칰blicos anteriores', width=600)
        pass
    elif grafico_seleccionado == 'Gr치fico de pastel de Nivel de estudios':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico de torta interactivo presenta las proporciones de Nivel de estudio alcanzado por cada pol칤tico.</div>", unsafe_allow_html=True)
        import streamlit.components.v1 as components
        with open("nivel_estudios_torta.html", "r", encoding="utf-8") as f:
            html_content = f.read()
        components.html(html_content, height=500)
        pass
    elif grafico_seleccionado == 'Gr치fico de pastel de Conocimiento de Lenguas originarias':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico de torta interactivo presenta las proporciones en Conocimientos de Lenguas originarias por cada pol칤tico.</div>", unsafe_allow_html=True)
        import streamlit.components.v1 as components
        with open("lenguas_originarias_torta.html", "r", encoding="utf-8") as f:
            html_content = f.read()
        components.html(html_content, height=500)
        pass
    elif grafico_seleccionado == 'Gr치fico de dispersi칩n de Ingresos anuales y Nivel de estudios':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico de dispersi칩n interactivo presenta una comparativa entre las variables de Ingresos anuales y Nivel de estudios alcanzado por cada pol칤tico.</div>", unsafe_allow_html=True)
        import streamlit.components.v1 as components
        with open("dispersi칩n_ingresos.html", "r", encoding="utf-8") as f:
            html_content = f.read()
        components.html(html_content, height=500)
        pass
    elif grafico_seleccionado == 'Gr치fico de barras de Inmuebles y Muebles':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico de barras interactivo presenta una comparativa entre la cantidad de Inmuebles y muebles declarados por cada pol칤tico.</div>", unsafe_allow_html=True)
        import streamlit.components.v1 as components
        with open("barras_inmuebles.html", "r", encoding="utf-8") as f:
            html_content = f.read()
        components.html(html_content, height=500)
        pass
    elif grafico_seleccionado == 'Treemap comparativo Ocupaci칩n e Ingresos':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico Treemap interactivo presenta una comparativa entre la Ocupaci칩n laboral y el Ingreso anual por cada pol칤tico.</div>", unsafe_allow_html=True)
        import streamlit.components.v1 as components
        with open("ocupacion_ingresos_treemap2.html", "r", encoding="utf-8") as f:
            html_content = f.read()
        components.html(html_content, height=500)
        pass

elif  pagina_seleccionada == 'Nubes de palabra':

    # Agregamos un t칤tulo
    st.markdown("<h1 style='text-align: center;'>Nubes de palabras: Recopilaci칩n de palabras m치s asociadas a las figuras pol칤ticas</h1>", unsafe_allow_html=True)
    
    # Creamos una lista de gr치ficos
    graficos_nube = ['Nube de palabras C칠sar Acu침a Peralta','Nube de palabras Rafael L칩pez Aliaga', 'Nube de palabras Keiko Fujimori', 'Nube de palabras Alfonso L칩pez-Chau', 'Nube de palabras Fernando Olivera', 'Nube de palabras Veronika Mendoza', 'Nube de palabras Mart칤n Vizcarra', 'Nube de palabras Vladimir Cerr칩n', 'Nube de palabras George Forsyth', 'Nube de palabras Dina Boluarte', 'Nube de palabras Adriana Tudela', 'Nube de palabras Guido Bellido', 'Nube de palabras Julio Guzm치n', 'Nube de palabras Modesto Montoya', 'Nube de palabras Jorge P칠rez', 'Nube de palabras Yohny Lescano']

    # Creamos un cuadro de selecci칩n en la p치gina de gr치ficos
    grafico_seleccionado_nube = st.selectbox('Selecciona un gr치fico', graficos_nube)
    
    st.write('---')
    
    # Mostramos el gr치fico seleccionado
    if grafico_seleccionado_nube == 'Nube de palabras C칠sar Acu침a Peralta':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de noticias relacionadas con las palabras clave con mayor asociaci칩n al pol칤tico.</div>", unsafe_allow_html=True)
        st.image("nube_palabras_acu침a.png", caption='Nube de palabras C칠sar Acu침a Peralta', width=600)
        pass
    elif grafico_seleccionado_nube == 'Nube de palabras Rafael L칩pez Aliaga':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de noticias relacionadas con las palabras clave con mayor asociaci칩n al pol칤tico.</div>", unsafe_allow_html=True)
        st.image("nube_palabras_aliaga.png", caption='Nube de palabras Rafael L칩pez Aliaga', width=600)
        pass
    elif grafico_seleccionado_nube == 'Nube de palabras Rafael Keiko Fujimori':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de noticias relacionadas con las palabras clave con mayor asociaci칩n al pol칤tico.</div>", unsafe_allow_html=True)
        st.image("nube_palabras_keiko.png", caption='Nube de palabras Keiko Fujimori', width=600)
        pass
    elif grafico_seleccionado_nube == 'Nube de palabras Alfonso L칩pez-Chau':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de noticias relacionadas con las palabras clave con mayor asociaci칩n al pol칤tico.</div>", unsafe_allow_html=True)
        st.image("nube_palabras_lopezchau.png", caption='Nube de palabras Alfonso L칩pez-Chau', width=600)
        pass
    elif grafico_seleccionado_nube == 'Nube de palabras Fernando Olivera':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de noticias relacionadas con las palabras clave con mayor asociaci칩n al pol칤tico.</div>", unsafe_allow_html=True)
        st.image("nube_palabras_olivera.png", caption='Nube de palabras Fernando Olivera', width=600)
        pass
    elif grafico_seleccionado_nube == 'Nube de palabras Veronika Mendoza':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de noticias relacionadas con las palabras clave con mayor asociaci칩n al pol칤tico.</div>", unsafe_allow_html=True)
        st.image("nube_palabras_veronika.png", caption='Nube de palabras Veronika Mendoza', width=600)
        pass
    elif grafico_seleccionado_nube == 'Nube de palabras Mart칤n Vizcarra':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de noticias relacionadas con las palabras clave con mayor asociaci칩n al pol칤tico.</div>", unsafe_allow_html=True)
        st.image("nube_palabras_vizcarra.png", caption='Nube de palabras Mart칤n Vizcarra', width=600)
        pass
    elif grafico_seleccionado_nube == 'Nube de palabras Vladimir Cerr칩n':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de noticias relacionadas con las palabras clave con mayor asociaci칩n al pol칤tico.</div>", unsafe_allow_html=True)
        st.image("nube_palabras_vladimircerron.png", caption='Nube de palabras Vladimir Cerr칩n', width=600)
        pass
    elif grafico_seleccionado_nube == 'Nube de palabras George Forsyth':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de noticias relacionadas con las palabras clave con mayor asociaci칩n al pol칤tico.</div>", unsafe_allow_html=True)
        st.image("nube_george_forsyth.png", caption='Nube de palabras George Forsyth', width=600)
        pass
    elif grafico_seleccionado_nube == 'Nube de palabras Dina Boluarte':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de noticias relacionadas con las palabras clave con mayor asociaci칩n a la pol칤tica.</div>", unsafe_allow_html=True)
        st.image("nube_palabras_dina.png", caption='Nube de palabras Dina Boluarte', width=600)
        pass
    elif grafico_seleccionado_nube == 'Nube de palabras Adriana Tudela':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de noticias relacionadas con las palabras clave con mayor asociaci칩n a la pol칤tica.</div>", unsafe_allow_html=True)
        st.image("nube_adriana_tudela.png", caption='Nube de palabras Adriana Tudela', width=600)
        pass
    elif grafico_seleccionado_nube == 'Nube de palabras Guido Bellido':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de noticias relacionadas con las palabras clave con mayor asociaci칩n al pol칤tico.</div>", unsafe_allow_html=True)
        st.image("nube_guido_bellido.png", caption='Nube de palabras Guido Bellido', width=600)
        pass
    elif grafico_seleccionado_nube == 'Nube de palabras Julio Guzm치n':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de noticias relacionadas con las palabras clave con mayor asociaci칩n al pol칤tico.</div>", unsafe_allow_html=True)
        st.image("nube_julio_guzman.png", caption='Nube de palabras Julio Guzm치n', width=600)
        pass
    elif grafico_seleccionado_nube == 'Nube de palabras Modesto Montoya':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de noticias relacionadas con las palabras clave con mayor asociaci칩n al pol칤tico.</div>", unsafe_allow_html=True)
        st.image("nube_modesto_montoya.png", caption='Nube de palabras Modesto Montoya', width=600)
        pass
    elif grafico_seleccionado_nube == 'Nube de palabras Jorge P칠rez':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de noticias relacionadas con las palabras clave con mayor asociaci칩n al pol칤tico.</div>", unsafe_allow_html=True)
        st.image("nube_de_palabras_jorge.png", caption='Nube de palabras Jorge P칠rez', width=600)
        pass
    elif grafico_seleccionado_nube == 'Nube de palabras Yohny Lescano':
        st.markdown("<div style='text-align: justify; font-size: 20px;'>El gr치fico muestra una nube de palabras que presenta la recopilaci칩n de frecuencias recolectadas sobre la base de noticias relacionadas con las palabras clave con mayor asociaci칩n al pol칤tico.</div>", unsafe_allow_html=True)
        st.image("nube_lescano.png", caption='Nube de palabras Yohny Lescano', width=600)
        pass

elif pagina_seleccionada == 'Mapa interactivo':
    st.markdown("<h1 style='text-align: center;'>Mapa interactivo por lugar de nacimiento</h1>", unsafe_allow_html=True)
    st.markdown("<div style='text-align: justify; font-size: 20px;'>Explora en este mapa interactivo los lugares de nacimiento de los candidatos presidenciales del 2026.</div>", unsafe_allow_html=True)
    import streamlit.components.v1 as components
    try:
        with open("mapa_politicos.html", "r", encoding="utf-8") as f:
            html_content = f.read()
        components.html(html_content, height=700)
    except FileNotFoundError:
        st.error("No se encontr칩 el archivo 'mapa_politicos.html'. Aseg칰rate de haberlo subido correctamente al repositorio.")
     # La funci칩n components.html toma como primer argumento el contenido HTML que se desea mostrar.
    # En este caso, el contenido HTML se lee desde el archivo "mapa_politicos.html".
    # El argumento height se utiliza para especificar la altura del contenido HTML, en este caso 700 p칤xeles.
